library(tidyverse)
library(magrittr)
library(knitr)
library(patchwork)
theme_set(theme_bw())
options(tinytex.verbose = TRUE)
anes <- read_csv("anes_pilot_2018.csv")
anes <- anes %>%
mutate(
voted_2016 = case_when(
turnout16 == 1 ~ 'Voted',
turnout16 == 2 ~ 'Did not Vote',
turnout16 == 3 & turnout16b == 1 ~ 'Voted',
turnout16 == 3 & turnout16b == 2 ~ 'Did not Vote'),
voted_2018 = case_when(
turnout18 %in% 1:3 ~ 'Voted',
turnout18 == 4 ~ 'Did not Vote',
turnout18 == 5 & turnout18ns == 1 ~ 'Voted',
turnout18 == 5 & turnout18ns == 2 ~ 'Did not Vote')
)
summary(anes$geangry)
library(tidyverse)
library(magrittr)
library(knitr)
library(patchwork)
theme_set(theme_bw())
options(tinytex.verbose = TRUE)
anes <- read_csv("anes_pilot_2018.csv")
anes <- anes %>%
mutate(
voted_2016 = case_when(
turnout16 == 1 ~ 'Voted',
turnout16 == 2 ~ 'Did not Vote',
turnout16 == 3 & turnout16b == 1 ~ 'Voted',
turnout16 == 3 & turnout16b == 2 ~ 'Did not Vote'),
voted_2018 = case_when(
turnout18 %in% 1:3 ~ 'Voted',
turnout18 == 4 ~ 'Did not Vote',
turnout18 == 5 & turnout18ns == 1 ~ 'Voted',
turnout18 == 5 & turnout18ns == 2 ~ 'Did not Vote')
)
anes <- anes %>%
filter(
geangry  >= 0,
geafraid >= 0,
!is.na(voted_2016),
!is.na(voted_2018)
)
number_of_rows <- anes %>%
filter(voted_2016 == 'Did not Vote') %>%
nrow()
summary_table <- anes %$%
prop.table(
table(
'Voted in 2016' = voted_2016,
'Voted in 2018' = voted_2018))
kable(
summary_table,
digits = 2,
caption = 'Cross Tab of Self Reported Voting in 2016 and 2018',
booktabs = TRUE)
fear_anger <- anes %>%
filter(voted_2016 == 'Did not Vote') %>%
ggplot(aes(x = geangry, y = geafraid, color = voted_2018)) +
geom_jitter() +
stat_smooth(method = 'lm') +
labs(
x = 'Anger', y = 'Fear', color = 'Voted in 2018?',
title = 'Fear and Anger in 2018') +
theme(legend.position = 'bottom', legend.box = 'horizontal')
describe_fear_anger <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted') %>%
select(geangry, geafraid) %>%
pivot_longer(cols = c(geangry, geafraid)) %>%
mutate(
name = case_when(
name == 'geafraid' ~ 'Fear',
name == 'geangry' ~ 'Anger')) %>%
ggplot(aes(x = value, color = name)) +
geom_density() +
labs(
x = "Respondent's Feelings",
y = 'Density',
color = 'Fear or Anger') +
theme(legend.position = 'bottom', legend.box = 'horizontal')
fear_anger_difference <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted') %>%
select(geangry, geafraid) %>%
mutate(fraidy_cat = geafraid - geangry) %>%
ggplot() +
aes(x = fraidy_cat) +
geom_histogram(bins = 10) +
labs(x = 'Fear - Anger')
(fear_anger) | (describe_fear_anger /
fear_anger_difference )
successes <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry > geafraid) %>% count()
failures <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry < geafraid) %$% count()
successes <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry > geafraid) %>% count()
failures <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry < geafraid) %>% count()
binom.test(successes, successes + failures, p=.5)
successes
successes <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry > geafraid) %>% sum()
successes <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry > geafraid) %>% nrow()
failures <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry < geafraid) %>% count()
binom.test(successes, successes + failures, p=.5)
successes <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry > geafraid) %>% nrow()
failures <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry < geafraid) %>% nrow()
binom.test(successes, successes + failures, p=.5)
successes <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry > geafraid) %>% nrow()
failures <- anes %>%
filter(
voted_2016 == 'Did not Vote',
voted_2018 == 'Voted',
geangry < geafraid) %>% nrow()
(test = binom.test(successes, successes + failures, p=.5))
test$estimate
eff_r = (successes - failures) / (success + failures)
eff_r = (successes - failures) / (successes + failures)
